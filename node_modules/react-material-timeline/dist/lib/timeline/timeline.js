"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var core_1 = require("@material-ui/core");
var styles = function (theme) { return ({
    container: {
        width: '100%',
        height: '100%',
        display: 'flex',
    },
    iconGrid: {
        position: 'relative',
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center'
    },
    iconContainer: {
        zIndex: 0,
    },
    line: {
        position: 'absolute',
        left: 'calc(50% - 1px)',
        width: '2px',
        height: '100%',
        backgroundColor: theme.palette.grey.A100,
    },
    cardContainer: {
        position: 'relative',
    },
    cardDecoratorLeft: {
        position: 'absolute',
        width: 0,
        height: 0,
        borderTop: '16px solid transparent',
        borderLeft: '16px solid' + theme.palette.grey.A100,
        borderBottom: '16px solid transparent',
        top: 'calc(50% - 16px)',
        left: '100%',
    },
    cardDecoratorRight: {
        position: 'absolute',
        width: 0,
        height: 0,
        borderTop: '16px solid transparent',
        borderRight: '16px solid' + theme.palette.grey.A100,
        borderBottom: '16px solid transparent',
        top: 'calc(50% - 16px)',
        right: '100%',
    }
}); };
;
var TimelineBase = /** @class */ (function (_super) {
    __extends(TimelineBase, _super);
    function TimelineBase(props) {
        var _this = _super.call(this, props) || this;
        if (!_this.props.events) {
            throw new Error('Please provide \'events\' as an input. For more help see docs.');
        }
        return _this;
    }
    TimelineBase.prototype.render = function () {
        var classes = this.props.classes;
        return (React.createElement(core_1.Grid, { container: true }, this.getRows()));
    };
    TimelineBase.prototype.getRows = function () {
        var _this = this;
        var classes = this.props.classes;
        return this.props.events.map(function (event, i) { return ([
            React.createElement(core_1.Grid, { item: true, xs: 5, key: 'left-' + i }, i % 2 === 0 && _this.getTimelineElement(event, true)),
            React.createElement(core_1.Grid, { item: true, xs: 2, key: 'icon-' + i, className: classes.iconGrid },
                React.createElement("div", { className: classes.line }),
                React.createElement("div", { className: classes.iconContainer }, event.icon)),
            React.createElement(core_1.Grid, { item: true, xs: 5, key: 'right-' + i }, i % 2 !== 0 && _this.getTimelineElement(event, false))
        ]); }).reduce(function (res, grid) { return res = res.concat(grid); }, []);
    };
    TimelineBase.prototype.getTimelineElement = function (event, isLeft) {
        var classes = this.props.classes;
        return (React.createElement("div", { className: classes.cardContainer },
            React.createElement("div", { className: isLeft ?
                    classes.cardDecoratorLeft : classes.cardDecoratorRight }),
            React.createElement(core_1.Card, null,
                React.createElement(core_1.CardHeader, { title: event.title, subheader: event.subheader }),
                React.createElement(core_1.CardContent, null, event.description))));
    };
    return TimelineBase;
}(React.Component));
exports.Timeline = core_1.withStyles(styles)(TimelineBase);
//# sourceMappingURL=timeline.js.map
